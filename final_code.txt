/*
____        _              _____               _             
/ ___|  ___ | | __ _ _ __  |_   _| __ __ _  ___| | _____ _ __ 
\___ \ / _ \| |/ _` | '__|   | || '__/ _` |/ __| |/ / _ \ '__|
 ___) | (_) | | (_| | |      | || | | (_| | (__|   <  __/ |   
|____/ \___/|_|\__,_|_|      |_||_|  \__,_|\___|_|\_\___|_|    (V.2)

# file @generated by YOUSSEF. DO NOT EDIT.
# last modified : 6 jan 2024.
# This file lists all contributors to the project.
# This is Code for project "Solar Tracker" for PSUFE Supervised BY Dr.ISLAM SHAALAN.

Code Written BY/
Youssef Khaled 
Nour Gamal
Nada Hassan

Students at :
portsaid university  (PSU)
faculty of Engineering  (FE)
Electronics & Communication Engineering Department  (ECE)

*/
#include <Servo.h>  

Servo servoH;  // create a servo object
Servo servoV;
#define ldr1 A0  // pin for the H LDRs   -->VU
#define ldr2 A1                     //   -->VD
#define ldr3 A2  // pin for the V LDRs   -->HR
#define ldr4 A3                     //   -->HL
#define mosfetV 8       // pin for the Vertical MOSFET
#define mosfetH 7       // pin for the Horizontal MOSFET  
#define solar_power 12  // pin to check OUTPUT power from solar panels
#define mosfetS 4       // pin for Solar MOSFET

int angleH; 
int angleV;
unsigned long timer;  // variable to store the current time
int error = 15;
int nopower = 0;


void servo_initialize() 
{
  //initialize servo H
  digitalWrite(mosfetH, HIGH);
  i = 0; 
  /*
  for (; i <= 90; i++) 
  {
    servoH.write(i);
    delay(50);
  }
  */
  servoH.write(0);
  angleH = 0;
  digitalWrite(mosfetH, LOW);

  digitalWrite(mosfetV, HIGH);   //initialize servo V 
  int i = 20;
  for (; i <= 90; i++) 
  {
    servoV.write(i);
    delay(50);
  }
  servoV.write(90);
  angleV = 90;

  delay(500);
}


void servov()  //attach 9
{
  int valdrVU = analogRead(ldr1);  
  //Serial.print("valdrVU  :");
  //Serial.println(valdrVU);
  int valdrVD = analogRead(ldr2); 
  //Serial.print("valdrVD  :");
  //Serial.println(valdrVD);
  if (valdrVU > valdrVD && angleV < 120) 
  {
    angleV--;
    servoV.write(angleV);
  } else if (valdrVU < valdrVD && angleV > 20) 
  {
    angleV++;
    servoV.write(angleV);
  }
  delay(10);
}


void servoh()  //atach 10
{
  int valdrHR = analogRead(ldr3);  
  //Serial.print("valdrHR  : ");
  //Serial.println(valdrHR);
  int valdrHL = analogRead(ldr4);  
  //Serial.print("valdrHL  : ");
  //Serial.println(valdrHL);
  if (valdrHR > valdrHL && angleH < 180) 
  {
    angleH--;
    servoH.write(angleH);
  } else if (valdrHR < valdrHL && angleH > 0) 
  {
    angleH++;
    servoH.write(angleH);
  }
  delay(10);
}


void setup() 
{
  //Serial.begin(9600);
  servoV.attach(9);  // attach the servo to pin 9
  servoH.attach(10);
  pinMode(mosfetV, OUTPUT);  // set the MOSFET pin as output
  pinMode(mosfetH, OUTPUT);
  pinMode(mosfetS, OUTPUT);
  pinMode(ldr1, INPUT);
  pinMode(ldr2, INPUT);
  pinMode(ldr3, INPUT);
  pinMode(ldr4, INPUT);

  servo_initialize();
}


void loop() 
{
  if (nopower >= 3 ) 
  {
    delay(14400000); // stop moving for 4H == 14 400 000 ms
  }
  digitalWrite(mosfetS, LOW);

  for(int x = 0 ; x < 3 ; x++  )
  {
      timer = millis();  // initialize the timer variable with the current time
      digitalWrite(mosfetH, HIGH);
      while (abs(millis() - timer) <= 5000) 
      {
        servoh();
        delay(40);
      }
      digitalWrite(mosfetH, LOW);

      delay(2000);

      timer = millis();  // initialize the timer variable with the current time
      digitalWrite(mosfetV, HIGH);
      while (abs(millis() - timer) <= 5000) 
      {
        servov();
        delay(40);
      }
      //digitalWrite(mosfetV, LOW);  //NOT Cutting power for the V_Servo to maintain the Angle

      delay(1000);
  }
  digitalWrite(mosfetS, HIGH);

  delay(1000);

  if (digitalRead(solar_power) == 0 ) 
  {
    nopower++;
  }
  else 
  {
  nopower=0;
  }

  delay(3600000); // 3 600 000 ms  == 1H
}
